{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SingedOutLinks.jsx","components/layout/Navbar.jsx","components/project/ProjectSummary.jsx","components/project/ProjectList.jsx","components/dashboard/Notifications.jsx","components/dashboard/Dashboard.jsx","components/project/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/project/CreateProject.jsx","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectRecuder.js","store/reducers/RootReducer.js","Config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","SingedOutLinks","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","project_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","DashBoard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectStyle","color","ownProps","match","params","data","style","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authordId","add","objectSpread","authorId","Date","App","Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","RootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.952cc7da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n       <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n        {props.profile.initials}\r\n        </NavLink></li>    \r\n           </ul>\r\n    )\r\n}\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, MapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword (\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n            }).then(() => {\r\n                dispatch({ type: 'SIGNUP_SUCCESS'})\r\n            }).catch(err => {\r\n                dispatch({ type: 'SIGNUP_ERROR', err})\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nconst SignedOutLinks = () => {\r\n    return (\r\n       <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>    \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SingedOutLinks';\r\nimport { connect } from 'react-redux'\r\nimport { link } from 'fs';\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props;\r\n   const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>React Blog</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps)(NavBar)","import React, { PureComponent } from 'react';\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React, { PureComponent } from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from 'react-router-dom'\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n          <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList\r\n","import React, { PureComponent } from 'react';\r\nimport moment from 'moment'\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n       <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Notifications</span>\r\n                <ul className='notifications'>\r\n                   { notifications && notifications.map(item => {\r\n                       return (\r\n                           <li key={item.id}>\r\n                            <span className=\"pink-text\">{item.user} </span>\r\n                            <span> {item.content}</span>\r\n                            <div className=\"grey-text note-date\">\r\n                                {moment(item.time.toDate()).fromNow()}\r\n                            </div>\r\n                           </li>\r\n                       )\r\n                   })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react';\r\nimport ProjectList from '../project/ProjectList'\r\nimport Notifications from './Notifications';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass DashBoard extends Component {\r\n    render() { \r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) {\r\n            return <Redirect to='/signin' />\r\n        }\r\n        \r\n        return ( \r\n            <div className=\"dashboard container\">\r\n                 <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                            <ProjectList projects={projects}/>\r\n                    </div>    \r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                            <Notifications notifications={notifications} />\r\n                    </div>            \r\n                 </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(DashBoard);\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectStyle = {\r\n    color: 'black'\r\n}\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n      if(!auth.uid) {\r\n        return <Redirect to='/signin' />\r\n    }\r\n    if (project) {\r\n     return(\r\n       <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div style={ProjectStyle} className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title} </span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n       </div>\r\n     )\r\n    } else {\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n       \r\n    \r\n}\r\n\r\nconst MapStateToProps = (state, ownProps) => {\r\n        const id = ownProps.match.params.id;\r\n        const projects = state.firestore.data.projects;\r\n        const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if(auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        const {authError} = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if(auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(MapStateToProps, MapDispatchToProps)(SignUp);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       this.props.createProject(this.state)\r\n       this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if(!auth.uid) {\r\n            return <Redirect to='/signin' />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                          <textarea  id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n    const MapStateToProps = (state) => {\r\n        return {\r\n            auth: state.firebase.auth\r\n        }\r\n    }\r\n\r\n    const MapDispatchToProps = (dispatch) => {\r\n            return {\r\n                createProject: (project) => dispatch(createProject(project))\r\n            }\r\n    }\r\n\r\nexport default connect( MapStateToProps, MapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            const authordId = getState().firebase.auth.uid;\r\n            firestore.collection('projects').add({\r\n                ...project,\r\n                authorFirstName: profile.firstName,\r\n                authorLastName: profile.lastName,\r\n                authorId: authordId,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                  dispatch({ type: 'CREATE_PROJECT', project });\r\n            }).catch((err) => {\r\n                dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n            })\r\n        // async \r\n      \r\n    }\r\n};\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/layout/Navbar';\nimport DashBoard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={DashBoard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { statement } from \"@babel/template\";\r\n\r\nconst initState = {\r\n        authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n        console.log('Error')\r\n        return {\r\n            ...state,\r\n            authError: 'Login Failed'\r\n        }\r\n        case 'LOGIN_SUCCESS':\r\n        console.log('Logged in')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n        console.log('SignOut Success')\r\n        return state;\r\n        case 'SIGNUP_SUCCESS':\r\n        console.log('Signup Success')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n        case 'SIGNUP_ERROR':\r\n        console.log('Signup Error') \r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n    \r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n        console.log('created project', action.project)\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error', action.err);\r\n        return state;\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectRecuder\";\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nconst RootReducer = combineReducers({\r\n    auth: authReducer, \r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default RootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBiZZQxRwwqb4n3_sIzPDZwtuZnn8WofQc\",\r\n    authDomain: \"react-reduxblog.firebaseapp.com\",\r\n    databaseURL: \"https://react-reduxblog.firebaseio.com\",\r\n    projectId: \"react-reduxblog\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"1069583531438\",\r\n    appId: \"1:1069583531438:web:875cdb39ce1ff1ef\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport RootReducer from './store/reducers/RootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './Config/fbConfig'\n\n \nconst store = createStore(RootReducer, \n    compose(\n        // store enhancers\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() =>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}